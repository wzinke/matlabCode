%% Gets .plx files for a given monkey after a given YYMMDD Date

function newFiles = klGetNewFiles(lastDate,varargin)

% Set defaults
monk = 'Gauss';

% Decode varargin
varStrInd = find(cellfun(@ischar,varargin));
for iv = 1:length(varStrInd),
    switch varargin{varStrInd(iv)},
        case {'monk','-m'},
            monk = varargin{varStrInd(iv)+1};
    end
end

% Assumes lastDate is a number, not string
if ischar(lastDate) && length(lastDate) == 6,
    lastDate = str2double(lastDate);
end

tableBase = 'C:\Users\Kaleb\Google Drive\Uprobe_colab\';
rawBase   = 'Y:\data';

tableDir = sprintf('%s/%s/',tableBase,upper(monk(1)));
rawDir   = sprintf('%s/%s/Raw',rawBase,monk);

% Get list of raw files
allRawFiles = dir(rawDir);
rawNames = {allRawFiles.name};

% Filter to .plx files
fileExt = '.plx';
[plxStr{1:length(rawNames)}] = deal(fileExt);
plxFileInd = ~cellfun(@isempty,cellfun(@strfind,rawNames,plxStr,'UniformOutput',0));
plxFileNames = rawNames(plxFileInd);

% Cut out Ultrasound days
[usCell{1:length(plxFileNames)}] = deal('Ultrasound');
usInd = ~cellfun(@isempty,cellfun(@strfind,plxFileNames,usCell,'UniformOutput',0));
nonUsFiles = plxFileNames(~usInd);

% Assume that rawNames are in mmddyy format and that the filename has a one
% letter suffix after it plus a four character suffix ('.plx'). Use these
% assumptions to grab the mmddyy date and rearrange to yymmdd
extDate = @(fName,suff) fName((end-(length(suff)+6)+1):(end-length(suff)));
asYYMMDD = @(fName) fName([5,6,1,2,3,4]);

[extCell{1:length(nonUsFiles)}] = deal(['x',fileExt]);
rawDates = cellfun(extDate,nonUsFiles,extCell,'UniformOutput',0);
rearrDates = cellfun(@str2double,cellfun(asYYMMDD,rawDates,'UniformOutput',0));

fullDateStr = @(date) sprintf('20%s-%s-%s',date(5:6),date(1:2),date(3:4));
fullFileDates = cellfun(fullDateStr,rawDates,'UniformOutput',0);

[sortDates, sortInd] = sort(rearrDates,'ascend');
recentFileInd = sortInd(sortDates > lastDate);
newFiles = nonUsFiles(recentFileInd);
newDates = fullFileDates(recentFileInd);

% Extract notes about the files
[dashCell{1:length(newFiles)}] = deal('-');
dashInds = cellfun(@strfind,newFiles,dashCell,'UniformOutput',0);
[probe, task, notes] = cellfun(@parseFile,newFiles,dashInds,'UniformOutput',0);
 
% Now let's finally break down and use a loop to create the rows
outMat = {};
for ir = 1:length(newDates),
    outRow = {upper(monk(1)),newDates{ir},'028','cosman',

function [probe, task, note] = parseFile(fName, dashes)
    % Assume probe comes after the first hyphen, task after the second, and
    % a note after the third
    if length(dashes) >= 3,
        part1 = fName((dashes(1)+1):(dashes(2)-1));
        part2 = fName((dashes(2)+1):(dashes(3)-1));
        
        if ismember(part1,{'Uprobe','Nexus'}),
            probe = part1;
            task = part2;
        else
            probe = part2;
            task = part1;
        end
        if length(dashes) == 4,
            part3 = fName((dashes(3)+1):(dashes(4)-1));
            note = part3;
        else
            note = nan;
        end
    else
        [probe, task, note] = deal(nan);
    end
    
end

keyboard

end


    